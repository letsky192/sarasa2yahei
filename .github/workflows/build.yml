name: build sarasa2yahei
on:
  workflow_dispatch:
  schedule:
    - cron: '9 1,4,7,10,13 * * *'

jobs:
  job1:
    runs-on: ubuntu-latest

    outputs:
      local_tag: ${{ steps.get_local_tag.outputs.tag }}
      upstream_tag: ${{ steps.get_upstream_tag.outputs.tag }}

    steps:
      - name: Get Local Tag
        id: get_local_tag
        run: |
          LOCAL_LATEST_TAG=$(curl -s https://api.github.com/repos/letsky192/sarasa2yahei/releases/latest | jq -r '.tag_name')
          echo "tag=$LOCAL_LATEST_TAG" >> "$GITHUB_OUTPUT"

      - name: Get Upstream Tag
        id: get_upstream_tag
        run: |
          UPSTREAM_LATEST_TAG=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.tag_name')
          echo "tag=$UPSTREAM_LATEST_TAG" >> "$GITHUB_OUTPUT"

  job2:
    runs-on: ubuntu-latest
    needs: job1
    if: ${{ needs.job1.outputs.local_tag != needs.job1.outputs.upstream_tag }}

    steps:
      - name: Install Dependencies
        run: |
          sudo apt-get install -y fontforge python3-fontforge p7zip-full

      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get Download URL
        run: |
          DOWNLOAD_URL_SC=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.assets[] | select(.name | test("^(?=.*Gothic)(?=.*SC)(?!.*Unhinted).*$")) | .browser_download_url')
          DOWNLOAD_URL_SCUI=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.assets[] | select(.name | test("^(?=.*Ui)(?=.*SC)(?!.*Unhinted).*$")) | .browser_download_url')
          DOWNLOAD_URL_TC=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.assets[] | select(.name | test("^(?=.*Gothic)(?=.*TC)(?!.*Unhinted).*$")) | .browser_download_url')
          DOWNLOAD_URL_TCUI=$(curl -s https://api.github.com/repos/be5invis/Sarasa-Gothic/releases/latest | jq -r '.assets[] | select(.name | test("^(?=.*Ui)(?=.*TC)(?!.*Unhinted).*$")) | .browser_download_url')
          echo "url_sc=$DOWNLOAD_URL_SC" >> $GITHUB_ENV
          echo "url_scui=$DOWNLOAD_URL_SCUI" >> $GITHUB_ENV
          echo "url_tc=$DOWNLOAD_URL_TC" >> $GITHUB_ENV
          echo "url_tcui=$DOWNLOAD_URL_TCUI" >> $GITHUB_ENV

      - name: Download and Extract Sarasa Fonts
        run: |
          mkdir /tmp/fonts
          DL_DIR=/tmp/fonts
          echo "DL_DIR=$DL_DIR" >> $GITHUB_ENV
          mkdir /tmp/fonts/sc
          mkdir /tmp/fonts/sc/base
          mkdir /tmp/fonts/sc/supplemental
          DL_DIR_SC=/tmp/fonts/sc
          echo "DL_DIR_SC=$DL_DIR_SC" >> $GITHUB_ENV
          mkdir /tmp/fonts/tc
          mkdir /tmp/fonts/tc/base
          mkdir /tmp/fonts/tc/supplemental
          DL_DIR_TC=/tmp/fonts/tc
          echo "DL_DIR_TC=$DL_DIR_TC" >> $GITHUB_ENV
          cd $DL_DIR
          echo $DL_DIR && echo $DL_DIR_SC && echo $DL_DIR_TC
          curl -Lo fonts_sc_zip $url_sc
          curl -Lo fonts_scui_zip $url_scui
          curl -Lo fonts_tc_zip $url_tc
          curl -Lo fonts_tcui_zip $url_tcui
          7z e fonts_sc_zip
          7z e fonts_scui_zip
          7z e fonts_tc_zip
          7z e fonts_tcui_zip

      - name: Generate Patched SC and TC Fonts
        run: |
          python3 exec_sc.py
          python3 exec_tc.py

      - name: Compress SC and TC Fonts
        run: |
          cd $DL_DIR_SC
          7z a -t7z -m0=lzma -mx=9 -mfb=273 -md=512m -ms=on sc-yahei-${{ needs.job1.outputs.upstream_tag }}.7z ./*
          cd $DL_DIR_TC
          7z a -t7z -m0=lzma -mx=9 -mfb=273 -md=512m -ms=on tc-jhei-${{ needs.job1.outputs.upstream_tag }}.7z ./*

      - name: Calculate SHA1
        run: |
          cd $DL_DIR
          find "$DL_DIR_SC" "$DL_DIR_TC" -type f -name "*.7z" > filelist.txt
          while read -r file; do
            filename=$(basename "$file")
            sha1=$(sha1sum "$file" | awk '{print $1}')
            echo "> - $filename: \`$sha1\`" >> sha1.txt
          done < filelist.txt

      - name: Release Assets
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name: ${{ needs.job1.outputs.upstream_tag }}
          prerelease: false
          name: sarasa2yahei-${{ needs.job1.outputs.upstream_tag }}
          body_path: ${{ env.DL_DIR }}/sha1.txt
          files: |
            ${{ env.DL_DIR_SC }}/*.7z
            ${{ env.DL_DIR_TC }}/*.7z
